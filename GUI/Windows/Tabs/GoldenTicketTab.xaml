<local:RubeusTab x:Class="RubeusGui.Windows.Tabs.GoldenTicketTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RubeusGui.Windows.Tabs"
             mc:Ignorable="d" d:DesignHeight="690" d:DesignWidth="950" Loaded="RubeusTab_Loaded">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/RubeusGui;component/GlobalStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="{StaticResource TabBackgroundColor}">
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <DockPanel Margin="10,14,10,0">
                <StackPanel DockPanel.Dock="Top">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Image Stretch="None" VerticalAlignment="Top" Source="/RubeusGui;component/Images/help_16px.png" />
                        <StackPanel Margin="4,0,0,0" VerticalAlignment="Top" Grid.Column="1">
                            <TextBlock x:Name="LblDescription" TextWrapping="Wrap" Margin="0,0,0,3" Visibility="Collapsed">
                                        A golden ticket allows you to impersonate any user in the domain but requires you to have the password hash for the special &quot;krbtgt&quot; account that exists in every domain. 
                                        A silver tickets allow you to impersonate any user in the domain but only when accessing a specific service. Silver tickets require you to have the password hash for the user account that the service is running as (which can often be obtained via kerberoasting)
                            </TextBlock>
                            <TextBlock> <Hyperlink x:Name="LnkHideDescription" Click="LnkHideDescription_Click">Show description</Hyperlink></TextBlock>
                        </StackPanel>
                    </Grid>

                    <DockPanel Margin="0,16,0,0">
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" VerticalAlignment="Center" Source="/Images/movie_ticket_16px.png" />
                            <TextBlock Text="Ticket:" Margin="4,0,0,0" VerticalAlignment="Center" />
                        </StackPanel>
                        <Border HorizontalAlignment="Stretch" Margin="8,0,0,0" Height="1" VerticalAlignment="Center" Background="{StaticResource SeparatorBorderColor}" />
                    </DockPanel>
                    <StackPanel Margin="24,6,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="31" />
                                <RowDefinition Height="31" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!--<TextBlock Text="Type:" VerticalAlignment="Center" />-->
                            <ComboBox x:Name="CboTicketType" Grid.Column="0" Margin="0,0,0,0" Width="120" VerticalAlignment="Center" SelectedIndex="0" SelectionChanged="CboTicketType_SelectionChanged" HorizontalAlignment="Left">
                                <ComboBoxItem Content="Silver ticket" />
                                <ComboBoxItem Content="Golden ticket" />
                            </ComboBox>
                            <CheckBox x:Name="ChkSilverPtt" VerticalAlignment="Center" Grid.Row="1" Grid.ColumnSpan="2">
                                <TextBlock Text="Import ticket into current logon session" Margin="4,0" ToolTip="Windows will automatically use this ticket when accessing the service you created the silver ticket for. Also known as PTT (Pass The Ticket)" />
                            </CheckBox>
                            <CheckBox x:Name="ChkGoldenPtt" VerticalAlignment="Center" Grid.Row="1" Grid.ColumnSpan="2" Visibility="Collapsed">
                                <TextBlock Text="Import TGT into current logon session (overwrites existing session TGT)" Margin="4,0" ToolTip="Windows will automatically use this TGT when requesting new service tickets. Also known as PTT (Pass The Ticket)" />
                            </CheckBox>
                            <Expander x:Name="ExpAdvancedTicket" Grid.Row="2" Grid.ColumnSpan="2"  Margin="-3,4,0,0">
                                <Expander.Header>
                                    <TextBlock Text="Advanced options" />
                                </Expander.Header>
                                <Grid Margin="2,4,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="124" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="31" />
                                        <RowDefinition Height="31" />
                                        <RowDefinition Height="31" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="Start time:" VerticalAlignment="Center" />
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="6,0,0,0" Grid.Column="1">
                                        <ComboBox IsEnabled="False"  Width="70" SelectedIndex="0">
                                            <ComboBoxItem Content="Now" />
                                        </ComboBox>
                                        <TextBlock Foreground="#FFA4A4A4" VerticalAlignment="Center" Margin="8,0,0,0">
                                            Not currently configurable but if it's something you would find useful <Hyperlink x:Name="LnkFeedback" Click="LnkFeedback_Click">let me know</Hyperlink>
                                        </TextBlock>
                                    </StackPanel>

                                    <TextBlock Text="Requires renewal in:" Grid.Row="1" VerticalAlignment="Center" />
                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Margin="6,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">
                                        <TextBox x:Name="TxtRenewal" Width="40" Height="22" Text="10" />
                                        <ComboBox x:Name="CboRenewalUnits" Margin="6,0,0,0" Width="75" SelectedIndex="1">
                                            <ComboBoxItem Content="minutes" />
                                            <ComboBoxItem Content="hours" />
                                            <ComboBoxItem Content="days" />
                                        </ComboBox>
                                    </StackPanel>
                                    <TextBlock Text="Final expiry in:" Grid.Row="2" VerticalAlignment="Center" />
                                    <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" Margin="6,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">
                                        <TextBox x:Name="TxtFinalExpiry" Width="40" Height="22" Text="7" />
                                        <ComboBox x:Name="CboFinalExpiryUnits" Margin="6,0,0,0" Width="75" SelectedIndex="2">
                                            <ComboBoxItem Content="minutes" />
                                            <ComboBoxItem Content="hours" />
                                            <ComboBoxItem Content="days" />
                                        </ComboBox>
                                    </StackPanel>
                                </Grid>
                            </Expander>
                        </Grid>
                    </StackPanel>

                    <DockPanel Margin="0,18,0,0">
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" VerticalAlignment="Center" Source="/Images/target_16px.png" />
                            <TextBlock Text="Target:" Margin="4,0,0,0" VerticalAlignment="Center" />
                        </StackPanel>
                        <Border HorizontalAlignment="Stretch" Margin="8,0,0,0" Height="1" VerticalAlignment="Center" Background="{StaticResource SeparatorBorderColor}" />
                    </DockPanel>
                    <StackPanel Margin="24,6,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="124" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="31" />
                                <RowDefinition Height="31" x:Name="RowSpn" />
                                <RowDefinition Height="31" />
                            </Grid.RowDefinitions>
                            <TextBlock Text="Domain SID:"  VerticalAlignment="Center" />
                            <WrapPanel Grid.Column="1" Margin="6,0,0,0"  VerticalAlignment="Center">
                                <TextBox x:Name="TxtDomainSid" Height="22" Width="290" HorizontalAlignment="Left" Margin="0,0,6,0" ToolTip="The SID of the domain to forge a ticket for (this is the SID of any user from the domain with the last part removed)" />
                                <Button x:Name="BtnLookupDomainSid" Width="110" Height="22" ToolTip="Searches the domain you currently have selected in the global settings and gets the SID from that" Click="BtnLookupDomainSid_Click">
                                    <TextBlock Text="LDAP Lookup" />
                                </Button>
                            </WrapPanel>
                            <TextBlock Text="Service name (SPN):" Grid.Row="1" VerticalAlignment="Center" />
                            <TextBox x:Name="TxtSpn" Height="22" Grid.Column="1" Grid.Row="1" Margin="6,0,0,0" Width="290" HorizontalAlignment="Left" ToolTip="The SPN of the service to forge a ticket for (e.g service/host.mydomain.local)" />
                            <TextBlock x:Name="LblServicePassword" Text="Service password hash:" VerticalAlignment="Center" Grid.Row="2" />
                            <WrapPanel Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" Margin="6,0,0,0">
                                <TextBox x:Name="TxtPassword" Height="22" Width="290" HorizontalAlignment="Left"/>
                                <ComboBox x:Name="CboPasswordHashType" Width="78" DisplayMemberPath="DisplayName" VerticalAlignment="Center" Margin="6,0,0,0" HorizontalAlignment="Left" />
                            </WrapPanel>
                        </Grid>
                    </StackPanel>

                    <DockPanel Margin="0,18,0,0">
                        <StackPanel Orientation="Horizontal">
                            <Image Stretch="None" VerticalAlignment="Center" Source="/Images/male_user_16px.png" />
                            <TextBlock Text="Impersonate:" Margin="4,0,0,0" VerticalAlignment="Center" />
                        </StackPanel>
                        <Border HorizontalAlignment="Stretch" Margin="8,0,0,0" Height="1" VerticalAlignment="Center" Background="{StaticResource SeparatorBorderColor}" />
                    </DockPanel>
                    <StackPanel Margin="24,6,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="124" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="31" />
                                <RowDefinition Height="31" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Text="Username:" VerticalAlignment="Center" />
                            <TextBox x:Name="TxtUsername" Text="Administrator" Grid.Column="1" Height="22" Width="150" HorizontalAlignment="Left" Margin="6,0,0,0" ToolTip="The username that this forged ticket will say we are. This is often what appears in security event logs when you use this ticket to access services" />
                            <CheckBox x:Name="ChkLdap" Grid.Row="1" VerticalAlignment="Center"  VerticalContentAlignment="Center" Grid.Column="2" Margin="6,0,0,0" ToolTip="Makes the ticket look more realistic by populating the PAC with details about the impersonated account from an LDAP query. Also reads the password policy from SYSVOL share">
                                <TextBlock Margin="4,0,0,0" Text="Get user's details from LDAP and include in ticket" VerticalAlignment="Center" />
                            </CheckBox>
                            <Expander x:Name="ExpAdvancedUser" Grid.Row="2" Grid.ColumnSpan="2" Margin="-3,3,0,0">
                                <Expander.Header>
                                    <TextBlock Text="Advanced options" />
                                </Expander.Header>
                                <Grid Margin="2,3,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="124" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="31" />
                                        <RowDefinition Height="31" />
                                        <RowDefinition Height="31" />
                                        <RowDefinition Height="31" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="User ID:" VerticalAlignment="Center" Grid.Row="0" />
                                    <TextBox x:Name="TxtRid" Text="500" Grid.Row="0" Grid.Column="1" Height="22" Width="50" HorizontalAlignment="Left" Margin="6,0,0,0" ToolTip="This is usually what services will use to grant/deny you access (along with the group RIDs below). Defaults to RID for builtin Administrator account" />
                                    <TextBlock Text="Primary group ID:" VerticalAlignment="Center" Grid.Row="1" />
                                    <TextBox x:Name="TxtPrimaryGroupRid" Text="513" Grid.Row="1" Grid.Column="1" Height="22" Width="50" HorizontalAlignment="Left" Margin="6,0,0,0" ToolTip="Defaults to the RID for the Domain Users group" />
                                    <TextBlock Text="Group IDs:" VerticalAlignment="Center" Grid.Row="2" />
                                    <TextBox x:Name="TxtGroupRids" Text="512, 513, 518, 519, 520" Grid.Row="2" Grid.Column="1" Height="22" Width="280" HorizontalAlignment="Left" Margin="6,0,0,0" ToolTip="Defaults to the RIDs for: Domain Admins, Domain Users, Schema Admins, Enterprise Admins, Group Policy Creator Owners" />
                                    <TextBlock Text="Extra SIDs:" VerticalAlignment="Center" Grid.Row="3" />
                                    <TextBox x:Name="TxtExtraSids" Grid.Row="3" Grid.Column="1" Height="22" HorizontalAlignment="Left" Width="410" Margin="6,5,0,4" ToolTip="Impersonate SIDs from other domains. Usually only works for domains within the same forest, not external trusted domains. Separate multiple SIDs with a comma" />
                                </Grid>
                            </Expander>
                        </Grid>
                    </StackPanel>
                    <WrapPanel Margin="0,30,0,0" HorizontalAlignment="Left" DockPanel.Dock="Bottom">
                        <Button x:Name="BtnExecute" Width="130" Height="23" Click="BtnExecute_Click" >
                            <StackPanel Orientation="Horizontal" Margin="-2,0,0,0">
                                <Image x:Name="ImgExecuteBtn" Stretch="None" VerticalAlignment="Center" Source="/RubeusGui;component/Images/play_16px.png" Margin="0,0,4,0" />
                                <TextBlock x:Name="LblExecuteBtn" Text="Run" VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>
                        <ProgressBar x:Name="ProgBar" Visibility="Collapsed" Margin="10,0" IsIndeterminate="True" Width="200" Height="19" Background="{StaticResource TabBackgroundColor}" BorderBrush="#FF3F3F40" />
                    </WrapPanel>
                    <StackPanel x:Name="PnlResults" IsEnabled="False">
                        <TextBlock Text="Ticket (base64): " Margin="0,20,0,0" />
                        <TextBox x:Name="TxtTgt" TextWrapping="Wrap" Height="100" IsReadOnly="True" Margin="0,5,0,0" ScrollViewer.VerticalScrollBarVisibility="Auto" />
                        <WrapPanel Margin="0,10,0,8">
                            <Button x:Name="BtnCopyTicket" Width="138" Height="23" Click="BtnCopyTgt_Click">
                                <TextBlock Text="Copy To Clipboard" />
                            </Button>
                            <Button x:Name="BtnExportKirbi" Width="120" Height="23" Margin="10,0,0,0" Click="BtnExportKirbi_Click">
                                <TextBlock Text="Save As Kirbi" />
                            </Button>
                            <Button x:Name="BtnExportBase64" Margin="10,0,0,0" Width="120" Height="23" Click="BtnExportBase64_Click">
                                <TextBlock Text="Save As Base64" />
                            </Button>
                        </WrapPanel>
                    </StackPanel>
                </StackPanel>
            </DockPanel>
        </ScrollViewer>
    </Grid>
</local:RubeusTab>
